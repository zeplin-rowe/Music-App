{"version":3,"sources":["../src/index.ts","../src/runtime-values.ts"],"sourcesContent":["export * from './api';\nexport * from './apiKeys';\nexport * from './apiKeysSettings';\nexport * from './appearance';\nexport * from './attributes';\nexport * from './authConfig';\nexport * from './authObject';\nexport * from './backupCode';\nexport * from './billing';\nexport * from './clerk';\nexport * from './client';\nexport * from './commerceSettings';\nexport * from './customMenuItems';\nexport * from './customPages';\nexport * from './deletedObject';\nexport * from './displayConfig';\nexport * from './elementIds';\nexport * from './emailAddress';\nexport * from './enterpriseAccount';\nexport * from './environment';\nexport * from './externalAccount';\nexport * from './factors';\nexport * from './hooks';\nexport * from './identificationLink';\nexport * from './identifiers';\nexport * from './image';\nexport * from './instance';\nexport * from './json';\nexport * from './jwt';\nexport * from './jwtv2';\nexport * from './key';\nexport * from './localization';\nexport * from './multiDomain';\nexport * from './oauth';\nexport * from './organization';\nexport * from './organizationDomain';\nexport * from './organizationInvitation';\nexport * from './organizationMembership';\nexport * from './organizationMembershipRequest';\nexport * from './organizationSettings';\nexport * from './organizationSuggestion';\nexport * from './pagination';\nexport * from './passkey';\nexport * from './passwords';\nexport * from './permission';\nexport * from './phoneCodeChannel';\nexport * from './phoneNumber';\nexport * from './protect';\nexport * from './redirects';\nexport * from './resource';\nexport * from './role';\nexport * from './router';\n/**\n * TODO @revamp-hooks: Drop this in the next major release.\n */\nexport * from './runtime-values';\nexport * from './saml';\nexport * from './samlAccount';\nexport * from './samlConnection';\nexport * from './session';\nexport * from './sessionVerification';\nexport * from './signIn';\nexport * from './signInCommon';\nexport * from './signInFuture';\nexport * from './signUp';\nexport * from './signUpCommon';\nexport * from './signUpFuture';\nexport * from './snapshots';\nexport * from './ssr';\nexport * from './state';\nexport * from './strategies';\nexport * from './telemetry';\nexport * from './theme';\nexport * from './token';\nexport * from './totp';\nexport * from './user';\nexport * from './userOrganizationInvitation';\nexport * from './userSettings';\nexport * from './utils';\nexport * from './verification';\nexport * from './waitlist';\nexport * from './web3';\nexport * from './web3Wallet';\n","import type { OAuthProvider, OAuthProviderData } from './oauth';\nimport type { SamlIdpMap } from './saml';\nimport type { OAuthStrategy, Web3Strategy } from './strategies';\nimport type { Web3Provider, Web3ProviderData } from './web3';\n\n/**\n * @deprecated Use `import { WEB3_PROVIDERS } from \"@clerk/shared/web3\"` instead.\n *\n * @hidden\n */\nexport const WEB3_PROVIDERS: Web3ProviderData[] = [\n  {\n    provider: 'metamask',\n    strategy: 'web3_metamask_signature',\n    name: 'MetaMask',\n  },\n  {\n    provider: 'base',\n    strategy: 'web3_base_signature',\n    name: 'Base',\n  },\n  {\n    provider: 'coinbase_wallet',\n    strategy: 'web3_coinbase_wallet_signature',\n    name: 'Coinbase Wallet',\n  },\n  {\n    provider: 'okx_wallet',\n    strategy: 'web3_okx_wallet_signature',\n    name: 'OKX Wallet',\n  },\n];\n\n/**\n * @deprecated This utility will be dropped in the next major release.\n *\n * @hidden\n */\nexport function getWeb3ProviderData(params: {\n  provider?: Web3Provider;\n  strategy?: Web3Strategy;\n}): Web3ProviderData | undefined | null {\n  const { provider, strategy } = params;\n  if (provider) {\n    return WEB3_PROVIDERS.find(p => p.provider == provider);\n  }\n\n  return WEB3_PROVIDERS.find(p => p.strategy == strategy);\n}\n\n/**\n * @deprecated Use `import { OAUTH_PROVIDERS } from \"@clerk/shared/oauth\"` instead.\n *\n * @hidden\n */\nexport const OAUTH_PROVIDERS: OAuthProviderData[] = [\n  {\n    provider: 'google',\n    strategy: 'oauth_google',\n    name: 'Google',\n    docsUrl: 'https://clerk.com/docs/authentication/social-connections/google',\n  },\n  {\n    provider: 'discord',\n    strategy: 'oauth_discord',\n    name: 'Discord',\n    docsUrl: 'https://clerk.com/docs/authentication/social-connections/discord',\n  },\n  {\n    provider: 'facebook',\n    strategy: 'oauth_facebook',\n    name: 'Facebook',\n    docsUrl: 'https://clerk.com/docs/authentication/social-connections/facebook',\n  },\n  {\n    provider: 'twitch',\n    strategy: 'oauth_twitch',\n    name: 'Twitch',\n    docsUrl: 'https://clerk.com/docs/authentication/social-connections/twitch',\n  },\n  {\n    provider: 'twitter',\n    strategy: 'oauth_twitter',\n    name: 'Twitter',\n    docsUrl: 'https://clerk.com/docs/authentication/social-connections/twitter',\n  },\n  {\n    provider: 'microsoft',\n    strategy: 'oauth_microsoft',\n    name: 'Microsoft',\n    docsUrl: 'https://clerk.com/docs/authentication/social-connections/microsoft',\n  },\n  {\n    provider: 'tiktok',\n    strategy: 'oauth_tiktok',\n    name: 'TikTok',\n    docsUrl: 'https://clerk.com/docs/authentication/social-connections/tiktok',\n  },\n  {\n    provider: 'linkedin',\n    strategy: 'oauth_linkedin',\n    name: 'LinkedIn',\n    docsUrl: 'https://clerk.com/docs/authentication/social-connections/linkedin',\n  },\n  {\n    provider: 'linkedin_oidc',\n    strategy: 'oauth_linkedin_oidc',\n    name: 'LinkedIn',\n    docsUrl: 'https://clerk.com/docs/authentication/social-connections/linkedin-oidc',\n  },\n  {\n    provider: 'github',\n    strategy: 'oauth_github',\n    name: 'GitHub',\n    docsUrl: 'https://clerk.com/docs/authentication/social-connections/github',\n  },\n  {\n    provider: 'gitlab',\n    strategy: 'oauth_gitlab',\n    name: 'GitLab',\n    docsUrl: 'https://clerk.com/docs/authentication/social-connections/gitlab',\n  },\n  {\n    provider: 'dropbox',\n    strategy: 'oauth_dropbox',\n    name: 'Dropbox',\n    docsUrl: 'https://clerk.com/docs/authentication/social-connections/dropbox',\n  },\n  {\n    provider: 'atlassian',\n    strategy: 'oauth_atlassian',\n    name: 'Atlassian',\n    docsUrl: 'https://clerk.com/docs/authentication/social-connections/atlassian',\n  },\n  {\n    provider: 'bitbucket',\n    strategy: 'oauth_bitbucket',\n    name: 'Bitbucket',\n    docsUrl: 'https://clerk.com/docs/authentication/social-connections/bitbucket',\n  },\n  {\n    provider: 'hubspot',\n    strategy: 'oauth_hubspot',\n    name: 'HubSpot',\n    docsUrl: 'https://clerk.com/docs/authentication/social-connections/hubspot',\n  },\n  {\n    provider: 'notion',\n    strategy: 'oauth_notion',\n    name: 'Notion',\n    docsUrl: 'https://clerk.com/docs/authentication/social-connections/notion',\n  },\n  {\n    provider: 'apple',\n    strategy: 'oauth_apple',\n    name: 'Apple',\n    docsUrl: 'https://clerk.com/docs/authentication/social-connections/apple',\n  },\n  {\n    provider: 'line',\n    strategy: 'oauth_line',\n    name: 'LINE',\n    docsUrl: 'https://clerk.com/docs/authentication/social-connections/line',\n  },\n  {\n    provider: 'instagram',\n    strategy: 'oauth_instagram',\n    name: 'Instagram',\n    docsUrl: 'https://clerk.com/docs/authentication/social-connections/instagram',\n  },\n  {\n    provider: 'coinbase',\n    strategy: 'oauth_coinbase',\n    name: 'Coinbase',\n    docsUrl: 'https://clerk.com/docs/authentication/social-connections/coinbase',\n  },\n  {\n    provider: 'spotify',\n    strategy: 'oauth_spotify',\n    name: 'Spotify',\n    docsUrl: 'https://clerk.com/docs/authentication/social-connections/spotify',\n  },\n  {\n    provider: 'xero',\n    strategy: 'oauth_xero',\n    name: 'Xero',\n    docsUrl: 'https://clerk.com/docs/authentication/social-connections/xero',\n  },\n  {\n    provider: 'box',\n    strategy: 'oauth_box',\n    name: 'Box',\n    docsUrl: 'https://clerk.com/docs/authentication/social-connections/box',\n  },\n  {\n    provider: 'slack',\n    strategy: 'oauth_slack',\n    name: 'Slack',\n    docsUrl: 'https://clerk.com/docs/authentication/social-connections/slack',\n  },\n  {\n    provider: 'linear',\n    strategy: 'oauth_linear',\n    name: 'Linear',\n    docsUrl: 'https://clerk.com/docs/authentication/social-connections/linear',\n  },\n  {\n    provider: 'x',\n    strategy: 'oauth_x',\n    name: 'X / Twitter',\n    docsUrl: 'https://clerk.com/docs/authentication/social-connections/x-twitter-v2',\n  },\n  {\n    provider: 'enstall',\n    strategy: 'oauth_enstall',\n    name: 'Enstall',\n    docsUrl: 'https://clerk.com/docs/authentication/social-connections/enstall',\n  },\n  {\n    provider: 'huggingface',\n    strategy: 'oauth_huggingface',\n    name: 'Hugging Face',\n    docsUrl: 'https://clerk.com/docs/authentication/social-connections/huggingface',\n  },\n];\n\n/**\n * @deprecated This utility will be dropped in the next major release.\n *\n * @hidden\n */\nexport function getOAuthProviderData(params: {\n  provider?: OAuthProvider;\n  strategy?: OAuthStrategy;\n}): OAuthProviderData | undefined | null {\n  const { provider, strategy } = params;\n  if (provider) {\n    return OAUTH_PROVIDERS.find(oauth_provider => oauth_provider.provider == provider);\n  }\n\n  return OAUTH_PROVIDERS.find(oauth_provider => oauth_provider.strategy == strategy);\n}\n\n/**\n * @deprecated This utility will be dropped in the next major release.\n *\n * @hidden\n */\nexport function sortedOAuthProviders(sortingArray: OAuthStrategy[]) {\n  return OAUTH_PROVIDERS.slice().sort((a, b) => {\n    let aPos = sortingArray.indexOf(a.strategy);\n    if (aPos == -1) {\n      aPos = Number.MAX_SAFE_INTEGER;\n    }\n\n    let bPos = sortingArray.indexOf(b.strategy);\n    if (bPos == -1) {\n      bPos = Number.MAX_SAFE_INTEGER;\n    }\n\n    return aPos - bPos;\n  });\n}\n\n/**\n * @deprecated Use `import { SAML_IDPS } from \"@clerk/shared/saml\"` instead.\n *\n * @hidden\n */\nexport const SAML_IDPS: SamlIdpMap = {\n  saml_okta: {\n    name: 'Okta Workforce',\n    logo: 'okta',\n  },\n  saml_google: {\n    name: 'Google Workspace',\n    logo: 'google',\n  },\n  saml_microsoft: {\n    name: 'Microsoft Entra ID (Formerly AD)',\n    logo: 'azure',\n  },\n  saml_custom: {\n    name: 'SAML',\n    logo: 'saml',\n  },\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACUO,IAAM,iBAAqC;AAAA,EAChD;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,EACR;AACF;AAOO,SAAS,oBAAoB,QAGI;AACtC,QAAM,EAAE,UAAU,SAAS,IAAI;AAC/B,MAAI,UAAU;AACZ,WAAO,eAAe,KAAK,OAAK,EAAE,YAAY,QAAQ;AAAA,EACxD;AAEA,SAAO,eAAe,KAAK,OAAK,EAAE,YAAY,QAAQ;AACxD;AAOO,IAAM,kBAAuC;AAAA,EAClD;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA,EACA;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA,EACA;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA,EACA;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA,EACA;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA,EACA;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA,EACA;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA,EACA;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA,EACA;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA,EACA;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA,EACA;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA,EACA;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA,EACA;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA,EACA;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA,EACA;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA,EACA;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA,EACA;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA,EACA;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA,EACA;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA,EACA;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA,EACA;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA,EACA;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA,EACA;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA,EACA;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA,EACA;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA,EACA;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA,EACA;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AAAA,EACA;AAAA,IACE,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,EACX;AACF;AAOO,SAAS,qBAAqB,QAGI;AACvC,QAAM,EAAE,UAAU,SAAS,IAAI;AAC/B,MAAI,UAAU;AACZ,WAAO,gBAAgB,KAAK,oBAAkB,eAAe,YAAY,QAAQ;AAAA,EACnF;AAEA,SAAO,gBAAgB,KAAK,oBAAkB,eAAe,YAAY,QAAQ;AACnF;AAOO,SAAS,qBAAqB,cAA+B;AAClE,SAAO,gBAAgB,MAAM,EAAE,KAAK,CAAC,GAAG,MAAM;AAC5C,QAAI,OAAO,aAAa,QAAQ,EAAE,QAAQ;AAC1C,QAAI,QAAQ,IAAI;AACd,aAAO,OAAO;AAAA,IAChB;AAEA,QAAI,OAAO,aAAa,QAAQ,EAAE,QAAQ;AAC1C,QAAI,QAAQ,IAAI;AACd,aAAO,OAAO;AAAA,IAChB;AAEA,WAAO,OAAO;AAAA,EAChB,CAAC;AACH;AAOO,IAAM,YAAwB;AAAA,EACnC,WAAW;AAAA,IACT,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA,aAAa;AAAA,IACX,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA,gBAAgB;AAAA,IACd,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA,aAAa;AAAA,IACX,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AACF;","names":[]}